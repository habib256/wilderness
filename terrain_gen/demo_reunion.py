#!/usr/bin/env python3
"""
Script de d√©monstration pour l'extraction du terrain r√©el de l'√Æle de la R√©union.

Usage:
    python demo_reunion.py
    
Ce script va t√©l√©charger les donn√©es d'√©l√©vation r√©elles de la R√©union
et cr√©er une heightmap 1024x1024 utilisable dans votre projet.
"""

import sys
import os
from pathlib import Path

# Ajoute le module terrain_gen au path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

try:
    from terrain_gen.real_terrain_extractor import ReunionTerrainExtractor
    from terrain_gen.progress import ProgressTracker, ConsoleProgressCallback, set_progress_tracker
    print("‚úÖ Modules terrain_gen import√©s avec succ√®s")
except ImportError as e:
    print("‚ùå Erreur d'import:")
    print(f"   {e}")
    print("üí° Installez les d√©pendances: pip install -r requirements.txt")
    sys.exit(1)

def main():
    """D√©monstration simple de l'extraction R√©union."""
    
    print("üèùÔ∏è D√©monstration - Extraction terrain r√©el de la R√©union")
    print("=" * 60)
    print("Ce script va r√©cup√©rer les donn√©es d'√©l√©vation r√©elles de l'√Æle")
    print("de la R√©union depuis internet et cr√©er une heightmap 1024x1024.")
    print()
    
    # V√©rifie la connexion internet (simple test)
    try:
        import requests
        response = requests.get("https://httpbin.org/ip", timeout=10)
        if response.status_code == 200:
            print("‚úÖ Connexion internet OK")
        else:
            print("‚ö†Ô∏è Connexion internet limit√©e")
    except Exception:
        print("‚ùå Pas de connexion internet - l'extraction √©chouera")
        print("üí° V√©rifiez votre connexion et r√©essayez")
        return
    
    # Configure le syst√®me de progression
    progress_tracker = ProgressTracker()
    console_callback = ConsoleProgressCallback(show_details=True)
    progress_tracker.add_callback(console_callback)
    set_progress_tracker(progress_tracker)
    progress_tracker.start()
    
    # Cr√©e le dossier de sortie
    output_dir = Path("output")
    output_dir.mkdir(exist_ok=True)
    
    try:
        # Initialise l'extracteur
        print("\nüîß Initialisation de l'extracteur...")
        extractor = ReunionTerrainExtractor()
        
        # Extrait l'√Æle compl√®te (zone par d√©faut)
        print("\nüì° Extraction des donn√©es de la R√©union...")
        print("   Source: NASA SRTM (Shuttle Radar Topography Mission)")
        print("   R√©solution: 30m par pixel")
        print("   Taille finale: 1024x1024")
        print()
        
        heightmap = extractor.extract_reunion_1k(zone="full")
        
        if heightmap is not None:
            # Sauvegarde
            output_file = output_dir / "reunion_real_1k.png"
            
            # Convertit en PNG 16-bit
            import numpy as np
            from PIL import Image
            
            data_16bit = (heightmap * 65535).astype(np.uint16)
            img = Image.fromarray(data_16bit, mode='I;16')
            img.save(output_file)
            
            # Statistiques
            print(f"\nüéâ Extraction r√©ussie!")
            print(f"üìä Statistiques:")
            print(f"   ‚Ä¢ R√©solution: 1024x1024 pixels")
            print(f"   ‚Ä¢ Min: {np.min(heightmap):.4f}")
            print(f"   ‚Ä¢ Max: {np.max(heightmap):.4f}")
            print(f"   ‚Ä¢ Moyenne: {np.mean(heightmap):.4f}")
            print(f"   ‚Ä¢ √âcart-type: {np.std(heightmap):.4f}")
            print(f"   ‚Ä¢ Fichier: {output_file}")
            
            print(f"\nüåê Utilisation:")
            print(f"   ‚Ä¢ Copiez {output_file} vers web/images/reunion.png")
            print(f"   ‚Ä¢ Ajoutez 'reunion' aux terrains dans web/index.html")
            print(f"   ‚Ä¢ Ouvrez web/index.html dans votre navigateur")
            
            # Info sur l'√Æle
            print(f"\nüèùÔ∏è √Ä propos de l'√Æle de la R√©union:")
            print(f"   ‚Ä¢ Localisation: 21.1¬∞S, 55.5¬∞E (Oc√©an Indien)")
            print(f"   ‚Ä¢ Dimensions: ~63 √ó 45 km")
            print(f"   ‚Ä¢ Point culminant: Piton des Neiges (3,070m)")
            print(f"   ‚Ä¢ G√©ologie: √éle volcanique active")
            
        else:
            print(f"\n‚ùå √âchec de l'extraction")
            print(f"üí° Causes possibles:")
            print(f"   ‚Ä¢ Connexion internet instable")
            print(f"   ‚Ä¢ Services d'√©l√©vation temporairement indisponibles")
            print(f"   ‚Ä¢ Limite de quotas API atteinte")
            print(f"   ‚Ä¢ D√©pendance 'rasterio' manquante")
            
    except KeyboardInterrupt:
        print(f"\n‚èπÔ∏è Extraction interrompue par l'utilisateur")
    except Exception as e:
        print(f"\n‚ùå Erreur lors de l'extraction:")
        print(f"   {e}")
        print(f"üí° Solutions:")
        print(f"   ‚Ä¢ V√©rifiez votre connexion internet")
        print(f"   ‚Ä¢ Installez rasterio: pip install rasterio")
        print(f"   ‚Ä¢ R√©essayez dans quelques minutes")

if __name__ == "__main__":
    main()